# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.define :netboot do |netboot|
    netboot.vm.box = "bento/ubuntu-24.04"
    netboot.vm.network "forwarded_port", guest: 80, host: 8080, protocol: "tcp"
    netboot.vm.network "forwarded_port", guest: 3000, host: 3000, protocol: "tcp"
    netboot.vm.provider "vmware_desktop" do |vb|
      vb.utility_certificate_path = "/opt/vagrant-vmware-desktop/certificates"
      vb.gui = true
      vb.memory = 5120
      # https://developer.hashicorp.com/vagrant/docs/providers/vmware/known-issues
      # vb.base_address = "172.16.92.10"
      # vb.base_mac = "00:0C:29:8E:D6:25"
      vb.nat_device = "vmnet8"
    end
    # netboot.vm.network "private_network", ip: "172.16.92.131", auto_config: false
    netboot.vm.provision "shell", inline: <<-SHELL
      apt-get update
      apt-get install -y apt-transport-https ca-certificates curl software-properties-common net-tools
      apt-get install docker.io -y
      usermod -aG docker $USER
      mkdir assets config /vmnet8
      docker run -d --net=host --cap-add=NET_ADMIN  -v ./config:/config -v ./assets:/assets netbootxyz/netbootxyz:latest
    SHELL
    netboot.trigger.after :up do |trigger|
      trigger.ruby do |env,machine|
require 'erb'
require 'fileutils'
# require 'socket'
# puts Socket.gethostname
vmx=machine.id
dhcp_path="/Library/Preferences/VMware Fusion/vmnet8/dhcpd.conf"
netboot_ip=%x[vmrun getGuestIPAddress #{vmx}].strip
puts "######## NETBOOT VM IP: #{netboot_ip} ########"
template = ERB.new <<EOF
# Configuration file for ISC 2.0 vmnet-dhcpd operating on vmnet8.
#
# This file was automatically generated by the VMware configuration program.
# See Instructions below if you want to modify it.
#
# We set domain-name-servers to make some DHCP clients happy
# (dhclient as configured in SuSE, TurboLinux, etc.).
# We also supply a domain name to make pump (Red Hat 6.x) happy.
#


###### VMNET DHCP Configuration. Start of "DO NOT MODIFY SECTION" #####
# Modification Instructions: This section of the configuration file contains
# information generated by the configuration program. Do not modify this
# section.
# You are free to modify everything else. Also, this section must start
# on a new line
# This file will get backed up with a different name in the same directory
# if this section is edited and you try to configure DHCP again.

# Written at: 12/30/2024 16:18:59
allow unknown-clients;
default-lease-time 1800;                # default is 30 minutes
max-lease-time 7200;                    # default is 2 hours

####### VMNET DHCP Configuration. End of "DO NOT MODIFY SECTION" #######
subnet 172.16.92.0 netmask 255.255.255.0 {
  range 172.16.92.128 172.16.92.254;
  option broadcast-address 172.16.92.255;
  option domain-name-servers 172.16.92.2;
  option domain-name localdomain;
  default-lease-time 1800;                # default is 30 minutes
  max-lease-time 7200;                    # default is 2 hours
  option netbios-name-servers 172.16.92.2;
  option routers 172.16.92.2;
  next-server <%= netboot_ip %>;
  filename "netboot.xyz-arm64.efi";
}
host vmnet8 {
  hardware ethernet 00:50:56:C0:00:08;
  fixed-address 172.16.92.1;
  option domain-name-servers 0.0.0.0;
  option domain-name "";
  option routers 0.0.0.0;
}
EOF

backup_path = "#{dhcp_path}.vbak"

FileUtils.cp(dhcp_path, "/tmp/dhcpd.conf.vbak")
File.write("/tmp/dhcpd.conf", template.result(binding))

%x[sudo mv /tmp/dhcpd.conf.vbak "/Library/Preferences/VMware Fusion/vmnet8/dhcpd.conf.bak"]
%x[sudo mv /tmp/dhcpd.conf "/Library/Preferences/VMware Fusion/vmnet8/dhcpd.conf"]
%x[sudo "/Applications/VMware Fusion.app/Contents/Library/vmnet-cli" --stop]
%x[sudo "/Applications/VMware Fusion.app/Contents/Library/vmnet-cli" --start]
sleep(30)
      end
    end
  end

  config.vm.define :demo do |demo|
    demo.vm.box = "empty-box"
    # Don't wait for VM to boot - it won't finish anyway
    demo.vm.boot_timeout = 10

    demo.vm.provider "vmware_desktop" do |vb|
      vb.linked_clone = false
      vb.vmx["ethernet0.pcislotnumber"] = "160"
      # Display the GUI so we can see what it does
      vb.gui = true

      # Add enough RAM to download Ubuntu live
      vb.memory = 5120
    end
  end
end
